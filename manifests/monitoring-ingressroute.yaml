# =============================================================================
# IngressRoutes Traefik Production pour Stack de Monitoring
# =============================================================================
#
# Configuration production pour l'exposition de la stack de monitoring via Traefik :
# - Grafana (visualisation)
# - Prometheus (métriques)
# - AlertManager (alertes)
# - Loki (logs)
#
# Avec :
# - HTTPS automatique via Cert-Manager (Let's Encrypt)
# - Redirection HTTP vers HTTPS obligatoire
# - Headers de sécurité renforcés
# - Rate limiting adapté à chaque service
# - Authentification basique optionnelle
# - Gestion d'erreurs personnalisées
#
# =============================================================================

---
# IngressRoute HTTPS pour Grafana
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-https
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: monitoring-stack
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    argocd.argoproj.io/sync-wave: "4"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`grafana.clementpnn.com`)
      kind: Rule
      services:
        - name: prometheus-grafana
          port: 80
          scheme: http
      middlewares:
        - name: monitoring-security-headers
        - name: grafana-rate-limit
  tls:
    secretName: grafana-tls
    domains:
      - main: grafana.clementpnn.com

---
# IngressRoute HTTP redirect pour Grafana
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-http-redirect
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: ingress
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`grafana.clementpnn.com`)
      kind: Rule
      services:
        - name: prometheus-grafana
          port: 80
      middlewares:
        - name: https-redirect

---
# IngressRoute HTTPS pour Prometheus
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-https
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: monitoring-stack
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    argocd.argoproj.io/sync-wave: "4"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`prometheus.clementpnn.com`)
      kind: Rule
      services:
        - name: prometheus-prometheus
          port: 9090
          scheme: http
      middlewares:
        - name: monitoring-security-headers
        - name: prometheus-auth
        - name: prometheus-rate-limit
  tls:
    secretName: prometheus-tls
    domains:
      - main: prometheus.clementpnn.com

---
# IngressRoute HTTP redirect pour Prometheus
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus-http-redirect
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: ingress
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`prometheus.clementpnn.com`)
      kind: Rule
      services:
        - name: prometheus-prometheus
          port: 9090
      middlewares:
        - name: https-redirect

---
# IngressRoute HTTPS pour AlertManager
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: alertmanager-https
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: monitoring-stack
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    argocd.argoproj.io/sync-wave: "4"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`alertmanager.clementpnn.com`)
      kind: Rule
      services:
        - name: prometheus-alertmanager
          port: 9093
          scheme: http
      middlewares:
        - name: monitoring-security-headers
        - name: alertmanager-auth
        - name: alertmanager-rate-limit
  tls:
    secretName: alertmanager-tls
    domains:
      - main: alertmanager.clementpnn.com

---
# IngressRoute HTTP redirect pour AlertManager
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: alertmanager-http-redirect
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: ingress
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`alertmanager.clementpnn.com`)
      kind: Rule
      services:
        - name: prometheus-alertmanager
          port: 9093
      middlewares:
        - name: https-redirect

---
# IngressRoute HTTPS pour Loki
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: loki-https
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: monitoring-stack
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    argocd.argoproj.io/sync-wave: "4"
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`loki.clementpnn.com`)
      kind: Rule
      services:
        - name: loki-gateway
          port: 80
          scheme: http
      middlewares:
        - name: monitoring-security-headers
        - name: loki-auth
        - name: loki-rate-limit
  tls:
    secretName: loki-tls
    domains:
      - main: loki.clementpnn.com

---
# IngressRoute HTTP redirect pour Loki
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: loki-http-redirect
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: ingress
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`loki.clementpnn.com`)
      kind: Rule
      services:
        - name: loki-gateway
          port: 80
      middlewares:
        - name: https-redirect

---
# Middleware pour redirection HTTPS obligatoire
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: https-redirect
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring-stack
    app.kubernetes.io/component: middleware
spec:
  redirectScheme:
    scheme: https
    permanent: true

---
# Middleware pour headers de sécurité monitoring
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: monitoring-security-headers
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring-stack
    app.kubernetes.io/component: middleware
spec:
  headers:
    customRequestHeaders:
      X-Forwarded-Proto: https
      X-Forwarded-Port: "443"
      X-Real-IP: ""
    customResponseHeaders:
      # Headers de sécurité standards
      X-Content-Type-Options: nosniff
      X-Frame-Options: SAMEORIGIN
      X-XSS-Protection: "1; mode=block"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
      Referrer-Policy: strict-origin-when-cross-origin
      Permissions-Policy: "camera=(), microphone=(), geolocation=(), payment=()"

      # Headers pour applications de monitoring
      Cache-Control: "no-cache, must-revalidate"
      Pragma: "no-cache"

      # CSP pour les outils de monitoring
      Content-Security-Policy: >-
        default-src 'self';
        script-src 'self' 'unsafe-inline' 'unsafe-eval';
        style-src 'self' 'unsafe-inline';
        img-src 'self' data: https:;
        font-src 'self' data:;
        connect-src 'self' ws: wss:;
        form-action 'self';
        frame-ancestors 'self';
        object-src 'none';
        base-uri 'self';
        upgrade-insecure-requests

---
# Middleware d'authentification pour Prometheus
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: prometheus-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: middleware
spec:
  basicAuth:
    secret: monitoring-basic-auth
    realm: "Prometheus - Infrastructure Monitoring"

---
# Middleware d'authentification pour AlertManager
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: alertmanager-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: middleware
spec:
  basicAuth:
    secret: monitoring-basic-auth
    realm: "AlertManager - Alert Management"

---
# Middleware d'authentification pour Loki
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: loki-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: middleware
spec:
  basicAuth:
    secret: monitoring-basic-auth
    realm: "Loki - Log Aggregation"

---
# Middleware de rate limiting pour Grafana
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: grafana-rate-limit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: middleware
spec:
  rateLimit:
    period: 1m
    burst: 200
    average: 100
    sourceCriterion:
      ipStrategy:
        depth: 1

---
# Middleware de rate limiting pour Prometheus
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: prometheus-rate-limit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: middleware
spec:
  rateLimit:
    period: 1m
    burst: 100
    average: 50
    sourceCriterion:
      ipStrategy:
        depth: 1

---
# Middleware de rate limiting pour AlertManager
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: alertmanager-rate-limit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: middleware
spec:
  rateLimit:
    period: 1m
    burst: 50
    average: 25
    sourceCriterion:
      ipStrategy:
        depth: 1

---
# Middleware de rate limiting pour Loki
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: loki-rate-limit
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: middleware
spec:
  rateLimit:
    period: 1m
    burst: 100
    average: 50
    sourceCriterion:
      ipStrategy:
        depth: 1

---
# Secret pour l'authentification basique
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-basic-auth
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring-stack
    app.kubernetes.io/component: auth
type: Opaque
data:
  # admin:monitoring2024! (généré avec htpasswd)
  users: YWRtaW46JGFwcjEkSDZkdm5pTkwkTzJCWUxQVWQzSVdQNEc4TUtWMHJhMQ==

---
# Certificats SSL pour tous les services
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-tls-certificate
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: certificate
spec:
  secretName: grafana-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - grafana.clementpnn.com
  renewBefore: 720h
  duration: 2160h
  privateKey:
    algorithm: RSA
    size: 2048

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prometheus-tls-certificate
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: certificate
spec:
  secretName: prometheus-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - prometheus.clementpnn.com
  renewBefore: 720h
  duration: 2160h
  privateKey:
    algorithm: RSA
    size: 2048

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: alertmanager-tls-certificate
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: certificate
spec:
  secretName: alertmanager-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - alertmanager.clementpnn.com
  renewBefore: 720h
  duration: 2160h
  privateKey:
    algorithm: RSA
    size: 2048

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: loki-tls-certificate
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: certificate
spec:
  secretName: loki-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - loki.clementpnn.com
  renewBefore: 720h
  duration: 2160h
  privateKey:
    algorithm: RSA
    size: 2048

---
# ServiceMonitor pour monitoring de Traefik par Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: traefik-monitoring
  namespace: monitoring
  labels:
    app.kubernetes.io/name: traefik
    app.kubernetes.io/part-of: kube-prometheus-stack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  namespaceSelector:
    matchNames:
      - traefik
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      honorLabels: true

---
# NetworkPolicy pour sécuriser l'accès au monitoring
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-ingress
  namespace: monitoring
  labels:
    app.kubernetes.io/name: monitoring-stack
    app.kubernetes.io/component: security
spec:
  podSelector: {}
  policyTypes:
    - Ingress
  ingress:
    # Autoriser Traefik à accéder aux services de monitoring
    - from:
        - namespaceSelector:
            matchLabels:
              name: traefik
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 3000
        - protocol: TCP
          port: 9090
        - protocol: TCP
          port: 9093
    # Autoriser les communications internes dans le namespace monitoring
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
    # Autoriser Promtail à envoyer des logs à Loki
    - from: []
      ports:
        - protocol: TCP
          port: 3100
